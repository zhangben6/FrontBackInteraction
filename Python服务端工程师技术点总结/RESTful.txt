1.为什么要进行前后端分离？
    (1)近些年随着pc端，app端，pad端的设备流行使用，以往的pc端开发模式已经不再适合于其他前端的设备。因此后台必须有一套统一的api接口用来提供数据
       服务，让不同的前端设备都能进行页面的渲染和数据的填充.(多端适应)
    (2) SPA开发模式的流行：后端提供api接口数据，前端负责数据的展示。
    (3) 前后端开发职责不清: 模板层的代码到底谁来写？当后端工程师拿到页面要进行拆分，组装成模板语法的页面，也不能嵌套python语法。
    (4)开发效率慢，会出现互相等待的状况。
    (5)后台开发语言和模板高度耦合，导致严重依赖开发语言。比如前期模板语言使用python写的，后期需要模板需要换java语言，那么模板就需要
    重新开发，由于代码和html语法高度耦合，工作量加重。
2.前后端分离的缺点：
    (1)前后端工程师的学习门槛增加：对于前端工程师来说以前后端可以完成的事，就比如模板中可以加入iflese后台语言的判断逻辑用来动态显示数据，现在
       这些工作量全部都交给了前端，学习成本就会提高。对于后端工程师来说，需要将所有的数据和接口去满足前后端分离的规范，学习成本也增加。
    (2)数据依赖导致文档重要性增加：以前不需要文档的时候，后端人员直接写模板语法就可以进行数据渲染；而前后端分离之后，后端人员只需要把提供数据服务
    的接口写好就行了，这时候前端人员需要依赖后端人员写的文档进行开发，如果文档写的不详细，前端开发难度也会增大。
    (3)前端人员工作量增大
    (4)SEO(搜索引擎优化)的难度增加，在某些情况下前后端分离防止了一些初级的爬虫，当普通的爬虫利用reqesuts请求我们项目
    页面的时候，返回的都是一些没有数据的html源码，因为前后端已经分离，页面中的数据都是通过ajax去请求获取的。但同时也把
    搜索引擎的爬虫也屏蔽了，像百度，360，谷歌这些爬虫也都档之门外，这时候你的SEO排名也会变得不理想。(解决方案SSR)

3.restful api介绍：
    restful api目前是前后端分离的最佳实践，它实际上是一套开发的标准或者说规范，让我们在开发前后端分离项目，设计api的时候，
    需要依靠restfulapi的设计理念来设计。

4.restful api的好处：
    1.它是直接通过http协议来完成的，不需要额外的其他协议。而且利用http协议效果也比较好，因为它是无状态的。
    2，面向资源，一目了然，具有自解释性。
    3.数据描述简单，一般通过json或者xml做数据的传输

5.restfulapi的架构：
    因为在restfulapi理念中，url就当作资源来看待（名词）,我们可以在其中传入一些http协议的方法，如get,post,put,delete，
    进行资源对象的操作。所以总的来说http协议的方法再加上uri资源就可以完成restfulapi的思想。
    (1)每一个URI代表一种资源；
    (2)客户端和服务器之间，传递这种资源的某种表现层；
    (3)客户端通过四个HTTP动词，对服务器端资源进行操作，实现'表现层状态转化'
    