1.Mysql优化
    1.为经常搜索的字段建立索引
    2.避免使用select * 查询信息
    3.永远为每张表设置一个ID
    4.尽可能的使用not null
    5.选择正确的搜索引擎
        读操作多的时候用MyISam
        写操作多的时候用Innodb

2.死锁
    所谓死锁： 是指两个或两个以上的进程或线程在执行过程中，因争夺资源而造成的一种互相等待阻塞的现象，若无外力作用，
    它们都将无法推进下去。此时称系统处于死锁状态或系统产生了死锁，这些永远在互相等待的进程称为死锁进程.

3.lambda函数
    它是一个可以接收任意多个参数(包括可选参数)并且返回单个表达式值的匿名函数
    优势:lambda函数比较轻便,即用即扔,很适合完成一项简单的功能.经常用来给filter,map这样的函数式编程服务

4.浅拷贝(shallow copy) 和 深拷贝(deep copy)
    浅拷贝是指在复制过程中,只复制一层变量,不会复制深层变量绑定的对象的复制过程
    深拷贝复制所有层的变量和这些变量绑定的对象

5.python函数的缺省参数
    作用:让函数调用者少传递参数来调用函数
    说明: 1.缺省参数必须自右向左依次存在,如果有一个参数有缺省参数,则其右侧的所有参数都必须
            有缺省参数
          2.缺省参数可以有0个,1个或多个,甚至全部都有缺省参数

6.关于函数传参的面试题
def fn(a,lst=[]):
    lst.append(a)
    print(lst)

fn(3)  #[3]
fn(4)  #[3,4]
fn(5)  #[3,4,5]
--------------------------------------
L = [1,2]
def fn(a,lst=None):
    if lst is None:
        lst = []
    lst.append(a)
    print(lst)

fn(3)  #[3]
fn(4)  #[4]
fn(5)  #[5]

7.* 星号元祖传参 和  ** 双星号字典传参
    形参为*args 那么实参传入数据后函数里面的args是一个可迭代对象(元组)
    形参为 **kwargs 那么实参传入数据后函数里面的kwargs是一个字典

8.迭代器和生成器的区别
    迭代器:
        1.提到迭代器,它包含了一种协议:对象需要提供next()方法,它要么迭代器中的下一项,要么就引起
        一个StopIteration异常,以终止迭代
        2.list,tuple,dict都是Iterable(可迭代对象),但不是Iterator(迭代器),必须要使用内建函数iter()方
          法,把可迭代对象变成迭代器对象
        3.其实for循环的本质就是在内部通过利用内建函数iter()函数获取可迭代对象Iterable的迭代器,然后对获取到
          的迭代器对象不断调用next()方法来获取下一个值并将值赋给循环变量,当遇到stopIteration异常后循环结束.

    生成器:
        说明: 1.生成器一种特殊的迭代器对象,能够动态提供数据
             2.生成器是程序运行时生成数据,与容器类对象不同,他通常不会在内存中保存大量的数据,而是现用现生成
             3.并且只能循环遍历一次.
        作用: 延迟函数操作,通俗来说就是在需要的时候才产生结果,不是立即产生结果

9.Python 是如何进行内存管理的


    



